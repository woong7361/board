<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.notice.repository.NoticeBoardRepository">

    <sql id="noticeBoardSearchCondition">
        WHERE nb.notice_board_id NOT IN (SELECT temp_table.notice_board_id
                                        FROM (SELECT sub_nb.notice_board_id
                                                FROM notice_board as sub_nb
                                                WHERE sub_nb.is_fixed = true
                                                ORDER BY sub_nb.created_at DESC
                                                LIMIT #{fixedNoticeLimit}) as temp_table)

        <choose>
            <when test="search.startDate != null and search.endDate != null ">
                AND
                ((nb.created_at BETWEEN #{search.startDate} AND #{search.endDate})
                OR
                (nb.modified_at BETWEEN #{search.startDate} AND #{search.endDate}))
            </when>
            <otherwise>
                AND
                ((nb.created_at BETWEEN SUBDATE(NOW(), INTERVAL 1 YEAR) AND NOW())
                OR
                (nb.modified_at BETWEEN SUBDATE(NOW(), INTERVAL 1 YEAR) AND NOW()))
            </otherwise>
        </choose>

        <if test="search.category != null and search.category != 'ALL'">
            AND #{search.category} = c.value
        </if>

        <if test="search.keyWord != null and search.keyWord != ''">
            AND
            (nb.title LIKE CONCAT('%', #{search.keyWord}, '%')
            OR
            nb.content LIKE CONCAT('%', #{search.keyWord}, '%')
            OR
            m.`name` LIKE CONCAT('%', #{search.keyWord}, '%'))
        </if>
    </sql>

    <insert id="save" useGeneratedKeys="true" keyProperty="noticeBoard.noticeBoardId">
        INSERT INTO notice_board
            (member_id, category_id,
             title, content, is_fixed,
             views, created_at, modified_at)
        VALUES (#{memberId}, (SELECT category_id
                              FROM category
                              WHERE category.value = #{noticeBoard.category}),
                #{noticeBoard.title}, #{noticeBoard.content}, #{noticeBoard.isFixed},
                0, NOW(), null);
    </insert>

    <select id="findFixedNoticeBoardByLimit" resultType="com.example.notice.entity.NoticeBoard">
        SELECT notice_board_id,
               m.member_id AS 'member.memberId',
               m.name      AS 'member.name',
               c.value     AS category,
               title,
               views,
               is_fixed,
               created_at,
               modified_at
        FROM notice_board nb
                 LEFT JOIN member m on m.member_id = nb.member_id
                 LEFT JOIN category c on c.category_id = nb.category_id
        WHERE nb.is_fixed = true
        ORDER BY nb.created_at DESC
        LIMIT #{fixedNoticeLimit};

    </select>

    <select id="findNoneFixedNoticeBoardBySearchParam" resultType="com.example.notice.entity.NoticeBoard">
        SELECT
            nb.*,
            c.value AS category,
            m.member_id AS 'member.memberId', m.name AS 'member.name'
        FROM notice_board nb
                 LEFT JOIN member m on m.member_id = nb.member_id
                 LEFT JOIN category c on c.category_id = nb.category_id
        <include refid="noticeBoardSearchCondition"/>
        <choose>
            <when test="page.orderColumn != null and page.orderType != null">
                ORDER BY nb.${page.orderColumn} ${page.orderType}
            </when>
            <otherwise>
                ORDER BY nb.created_at DESC
            </otherwise>
        </choose>
        LIMIT #{page.offset}, #{page.size}
    </select>

    <select id="findNoneFixedNoticeBoardCountBySearchParam" resultType="int">
        SELECT COUNT(*)
        FROM notice_board nb
                LEFT JOIN member m on m.member_id = nb.member_id
                LEFT JOIN category c on c.category_id = nb.category_id
        <include refid="noticeBoardSearchCondition"/>
    </select>

    <select id="findById" resultType="com.example.notice.entity.NoticeBoard">
        SELECT
            nb.*,
            c.value AS category,
            m.member_id AS 'member.memberId', m.name AS 'member.name'
        FROM notice_board nb
             LEFT JOIN member m on m.member_id = nb.member_id
             LEFT JOIN category c on c.category_id = nb.category_id
        WHERE nb.notice_board_id = #{noticeBoardId}
    </select>

    <delete id="deleteById">
        DELETE FROM notice_board
        WHERE notice_board_id = #{noticeBoardId}
    </delete>

    <update id="updateBoardById">
        UPDATE notice_board
        SET title       = #{noticeBoard.title},
            content     = #{noticeBoard.content},
            is_fixed    = #{noticeBoard.isFixed},
            modified_at = NOW(),
            category_id = (SELECT ct.category_id
                           FROM category ct
                           WHERE ct.value = #{noticeBoard.category})

        WHERE notice_board_id = #{noticeBoardId};
    </update>

    <update id="increaseViewsById">
        UPDATE notice_board
        SET views = views + 1
        WHERE notice_board_id = #{noticeBoardId}
    </update>
</mapper>